









----
#### Solutions
Surreal ORM addresses these issues with:
- **Intuitive API for Complex Queries**: Designed to make even the most complex database interactions straightforward and type-safe.
- **Automated Schema Migration**: Reduces manual workload by automating schema migration processes, both one-way and two-way.
- **Embedded Migrations Support**: Simplifies setup and ensures consistency across development environments.


Key features include:
#### Technical Highlights
- **Type Safety and Intuitive Use**: Prevents common errors with static type checks.
  
  ![Type Check in Action](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/static_check_raw_query.png)

- **Advanced Query Capabilities**: Enables sophisticated queries using nested fields and complex expressions.

  ![Nested Field Query](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/nested_field_type_check.png)
  ![Complex Math Expression](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/object_partial_complex_math_expression_block.png)




- **Query Turbo**: Facilitates complex raw queries and transactions as native Rust code, supporting idiomatic Rust constructs like loops and conditional statements.

  ![Query Turbo Example](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/complex_transaction_as_rust.png)

complex_transaction_as_rust


- **Static Query Checking**: Each query undergoes compile-time checks, significantly reducing runtime errors.

  ![Static Check on Single Query](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/static_check_single_raw_query.png)
  ![Multiple Query Checks](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/statically_checked_raw_multiple_queries.png)

- **Deep Typed Graph Traversal**: Facilitates complex data structure manipulations, enhancing the flexibility and power of database interactions.

  ![Deep Graph Traversal](https://raw.githubusercontent.com/Oyelowo/rust-talk/a9b986e5b8dad179d8968dd461e088ba87f8e142/RUST_TALK/deep_graph_field_traversal_with_queries.png)

#### Long-Term Vision
Future expansions include:
- **Support for Major RDBMS**: Plans to support PostgreSQL, MySQL, SQLite, MongoDB, and Cassandra, making it versatile across different database backends.

Join us to explore how Surreal ORM can transform your Rust database projects, streamlining operations and enhancing developer productivity.
